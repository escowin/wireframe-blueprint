@use './styles/variables' as *;

.app {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: $background-color;
  
  &-main {
    display: flex;
    flex: 1;
    overflow: hidden;
    min-height: 400px;
  }
}

.canvas-container {
  flex: 1;
  min-width: 0; // Allow canvas to shrink
  overflow: hidden;
}

.properties-panel-container {
  position: relative;
  min-width: 200px;
  max-width: 500px;
  height: 100%;
  flex-shrink: 0;
  transition: width 0.1s ease-out;
  
  // Thick border on the left
  border-left: 5px solid #000;
  
  // Resize handle
  &::before {
    content: '';
    position: absolute;
    left: -5px;
    top: 0;
    bottom: 0;
    width: 10px;
    cursor: col-resize;
    z-index: 10;
    background: transparent;
    transition: background-color 0.2s ease;
  }
  
  // Hover effect for resize handle
  &:hover::before {
    background: rgba(0, 0, 0, 0.1);
  }
  
  // Active state during resize
  &.resizing::before {
    background: rgba(0, 0, 0, 0.2);
  }
  
  // Visual indicator on hover
  &:hover::after {
    content: '][';
    position: absolute;
    left: -15px;
    top: 50%;
    transform: translateY(-50%);
    font-family: monospace;
    font-size: 12px;
    font-weight: bold;
    color: #000;
    background: rgba(255, 255, 255, 0.9);
    padding: 2px 4px;
    border-radius: 2px;
    z-index: 11;
    pointer-events: none;
  }
}

// Panel width indicators
.panel-width-indicators {
  position: fixed;
  top: 10px;
  left: 10px;
  display: flex;
  flex-direction: column;
  gap: 5px;
  z-index: 1000;
  pointer-events: none;
}

.width-indicator {
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-family: monospace;
  opacity: 0.8;
  transition: opacity 0.2s ease;
  
  &:hover {
    opacity: 1;
  }
} 